name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    env:
      EE_SERVICE_ACCOUNT_PYTEST: ${{ secrets.EE_SERVICE_ACCOUNT_PYTEST }}
      EE_SERVICE_ACCOUNT_CREDENTIALS_FILE_PYTEST: credentials.json


    # Define job steps
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Check-out repository
      uses: actions/checkout@v4

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Create credentials json
      env:
        EE_SERVICE_ACCOUNT_CREDENTIALS_PYTEST: ${{ secrets.EE_SERVICE_CREDENTIALS_PYTEST }}
      run: echo $EE_SERVICE_ACCOUNT_CREDENTIALS_PYTEST | base64 -di > credentials.json

    - name: Test with pytest
      run: poetry run pytest tests/ --cov=satellitetools --cov-report=xml

    - name: Use Codecov to track coverage
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml   # coverage report

    - name: Build documentation
      run: poetry run make html --directory docs/

    
  cd:
    permissions:
      id-token: write
      contents: write
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "master"
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Python Semantic Release to prepare release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.12.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Test install from TestPyPI
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            satellitetools

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/publish-action@v9.8.9
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}